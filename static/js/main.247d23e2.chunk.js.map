{"version":3,"sources":["actions/group.js","reducers/index.js","reducers/groups.js","actions/member.js","store.js","components/GroupPicker/GroupPicker.js","components/GroupPicker/index.js","components/TeamMembersList/index.js","utils/shuffle.js","components/TeamGenerator/TeamSizes.js","utils/chunckArray.js","components/TeamGenerator/TeamSizePicker.js","components/TeamGenerator/index.js","components/TeamCreator/index.js","components/Title/index.js","components/App.js","serviceWorker.js","index.js"],"names":["getGroups","dispatch","getState","groups","length","type","combineReducers","state","arguments","undefined","action","concat","Object","toConsumableArray","group","filter","id","map","member","objectSpread","members","memberId","name","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","ReduxThunk","save","states","namespace","store","createStore","reducer","load","withStyles","theme","root","flexGrow","form","marginTop","paper","padding","spacing","unit","textAlign","backgroundColor","color","palette","text","secondary","margin","chip","fontSize","link","textDecoration","&:focus, &:hover, &:visited, &:link, &:active","_ref","onDelete","onSubmit","onChange","values","classes","groupName","react_default","a","createElement","className","index_es","container","direction","justify","alignItems","item","xs","component","variant","gutterBottom","RouterLink","key","to","label","value","placeholder","required","size","GroupPickerContainer","e","_this","addGroup","props","preventDefault","setState","defineProperty","target","count","deleteGroup","confirm","this","components_GroupPicker_GroupPicker","React","Component","connect","uuid","demo","background","selectedGroupId","groupMember","selectedGroup","dense","primary","aria-label","onClick","Delete_default","shuffle","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","card","bullet","display","transform","title","pos","marginBottom","teamCount","maxSize","noOfTeams","arr","chunkCount","chunks","chunkSize","ceil","chunk","slice","push","chunkByCount","maxMembers","i","_","chunkByMax","teams","team","index","formControl","minWidth","handleChange","countMembers","teamSizing","Array","from","maxSizeSizing","htmlFor","inputProps","TeamGenerator_TeamSizes","TeamSizePickerContainer","_this$setState","_this$setState2","_this$props","_this$state","TeamGenerator_TeamSizePicker","parseInt","TeamCreatorContainer","addMember","match","groupId","params","deleteMember","_this$props2","Grid_default","TeamMembersList","TeamGenerator","App","react_router_dom","react_router","path","Title","exact","Boolean","location","hostname","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.247d23e2.chunk.js","sourcesContent":["import uuid from 'uuid';\n\nexport const ADD_GROUP = 'ADD_GROUP';\nexport const DELETE_GROUP = 'DELETE_GROUP';\nexport const GROUPS_FETCHED = 'GROUPS_FETCHED';\n\nexport const addGroup = name => ({\n  type: ADD_GROUP,\n  group: { id: uuid(), name, members: [] }\n});\n\nexport const deleteGroup = id => ({\n  type: DELETE_GROUP,\n  id\n});\n\nconst groupsFetched = groups => ({\n  type: GROUPS_FETCHED,\n  groups\n});\n\nexport const getGroups = () => (dispatch, getState) => {\n  if (getState().groups.length !== 0) return;\n  dispatch(groupsFetched(getState().groups));\n};\n","import { combineReducers } from 'redux';\nimport groups from './groups';\n\nexport default combineReducers({ groups });\n","import { ADD_GROUP, DELETE_GROUP, GROUPS_FETCHED } from '../actions/group';\nimport { ADD_MEMBER, DELETE_MEMBER } from '../actions/member';\n\nexport default (state = [], action = {}) => {\n  switch (action.type) {\n    case ADD_GROUP:\n      return [...state, action.group];\n    case DELETE_GROUP:\n      return state.filter(group => group.id !== action.id);\n    case GROUPS_FETCHED:\n      return action.groups;\n    case ADD_MEMBER:\n      return state.map(group => {\n        if (group.id === action.member.id) {\n          return {\n            ...group,\n            members: [\n              ...group.members,\n              {\n                id: action.member.memberId,\n                name: action.member.name\n              }\n            ]\n          };\n        }\n        return group;\n      });\n    case DELETE_MEMBER:\n      return state.map(group => {\n        if (group.id === action.member.id) {\n          return {\n            ...group,\n            members: group.members.filter(member => member.id !== action.member.memberId)\n          };\n        }\n        return group;\n      });\n    default:\n      return state;\n  }\n};\n","import uuid from 'uuid';\n\nexport const ADD_MEMBER = 'ADD_MEMBER';\nexport const DELETE_MEMBER = 'DELETE_MEMBER';\n\nexport const addMember = (id, name) => ({\n  type: ADD_MEMBER,\n  member: { id, memberId: uuid(), name }\n});\n\nexport const deleteMember = (id, memberId) => ({\n  type: DELETE_MEMBER,\n  member: { id, memberId }\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport ReduxThunk from 'redux-thunk';\nimport reducer from './reducers';\nimport { save, load } from 'redux-localstorage-simple';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(ReduxThunk, save({ states: ['groups'], namespace: 'redux' })));\n\nconst store = createStore(reducer, load({ states: ['groups'], namespace: 'redux' }), enhancer);\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Chip, Grid, Link, Paper, TextField, Typography, withStyles } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  form: {\n    marginTop: '1rem'\n  },\n  paper: {\n    padding: theme.spacing.unit * 15,\n    textAlign: 'center',\n    backgroundColor: '#E9BC6A',\n    color: theme.palette.text.secondary\n  },\n  margin: {\n    margin: theme.spacing.unit\n  },\n  chip: {\n    fontSize:20,\n    color: '#e4f9f5',\n    backgroundColor: '#11999e',\n    margin: theme.spacing.unit * 3\n  },\n  link: {\n    textDecoration: 'none',\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none'\n    }\n  }\n});\n\nconst GroupPicker = ({ onDelete, onSubmit, onChange, values, groups, classes }) => {\n  const { groupName } = values;\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={24}>\n        <Grid item xs={4}>\n          <Paper className={classes.paper}>\n            <Typography component=\"h5\" variant=\"h5\" gutterBottom>\n              {groups.length === 0 ? 'Create a group' : 'Select a group'}\n            </Typography>\n\n            {groups.map(group => (\n              <Link component={RouterLink} key={group.id} to={`/group/${group.id}`}>\n                <Chip\n                  key={group.id}\n                  label={group.name}\n                  color=\"primary\"\n                  className={classes.chip}\n                  onDelete={onDelete(group.id, group.members.length)}\n                />\n              </Link>\n            ))}\n            <div className={classes.form}>\n              <form onSubmit={onSubmit}>\n                <TextField\n                  value={groupName}\n                  onChange={onChange}\n                  placeholder=\"Enter group name\"\n                  type=\"text\"\n                  name=\"groupName\"\n                  required\n                />\n                <Button size=\"small\" type=\"submit\" className={classes.margin}>\n                  Add\n                </Button>\n              </form>\n            </div>\n          </Paper>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nGroupPicker.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  values: PropTypes.shape({}.isRequired).isRequired,\n  groups: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  classes: PropTypes.shape({}.isRequired).isRequired\n};\n\nexport default withStyles(styles)(GroupPicker);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport GroupPicker from './GroupPicker';\nimport { addGroup, deleteGroup, getGroups } from '../../actions/group';\n\nclass GroupPickerContainer extends React.Component {\n  state = { groupName: '' };\n\n  componentDidMount() {\n    const { getGroups } = this.props;\n    getGroups();\n  }\n\n  onSubmit = e => {\n    const { groupName } = this.state;\n    const { addGroup } = this.props;\n    e.preventDefault();\n    addGroup(groupName);\n    this.setState({ groupName: '' });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onDelete = (id, count) => e => {\n    const { deleteGroup } = this.props;\n    e.preventDefault();\n    if (count > 0) {\n      if (window.confirm(`Are you sure you want to delete this group with ${count} members`)) {\n        deleteGroup(id);\n      }\n    } else {\n      deleteGroup(id);\n    }\n  };\n\n  render() {\n    const { groups } = this.props;\n    return (\n      <GroupPicker\n        onSubmit={this.onSubmit}\n        onChange={this.onChange}\n        values={this.state}\n        groups={groups}\n        onDelete={this.onDelete}\n      />\n    );\n  }\n}\n\nGroupPickerContainer.propTypes = {\n  getGroups: PropTypes.func.isRequired,\n  addGroup: PropTypes.func.isRequired,\n  deleteGroup: PropTypes.func.isRequired,\n  groups: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired\n};\n\nconst mapStateToProps = state => ({ groups: state.groups });\n\nexport default connect(\n  mapStateToProps,\n  { addGroup, getGroups, deleteGroup }\n)(GroupPickerContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n  Button,\n  Divider,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Paper,\n  TextField,\n  Typography,\n  withStyles\n} from '@material-ui/core';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    backgroundColor: '#30e3ca',\n    color: theme.palette.text.secondary\n  },\n  margin: {\n    margin: theme.spacing.unit\n  },\n  link: {\n    textDecoration: 'none',\n\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none',\n      color: 'black'\n    }\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nconst TeamCreator = ({ onDelete, onSubmit, onChange, values, groups, selectedGroupId, classes }) => {\n  const { groupMember } = values;\n\n  const selectedGroup = groups.filter(group => {\n    return group.id === selectedGroupId;\n  });\n\n  return (\n    <Paper className={classes.paper}>\n      <Typography component=\"h5\" variant=\"h5\" gutterBottom>\n        {selectedGroup.length !== 0 && selectedGroup[0].members.length}\n        {' '}\nGroup Members\n      </Typography>\n      <Divider />\n      <List dense>\n        {selectedGroup.length !== 0 &&\n          selectedGroup[0].members.map(member => (\n            <ListItem key={member.id}>\n              <ListItemText primary={`${member.name}`} />\n              <ListItemSecondaryAction>\n                <IconButton aria-label=\"Delete\" onClick={onDelete(selectedGroup[0].id, member.id)}>\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n      </List>\n      <form onSubmit={onSubmit}>\n        <TextField\n          value={groupMember}\n          onChange={onChange}\n          placeholder=\"Enter name\"\n          type=\"text\"\n          name=\"groupMember\"\n          required\n          margin=\"dense\"\n        />\n        <Button size=\"small\" type=\"submit\" className={classes.margin}>\n          Add\n        </Button>\n      </form>\n    </Paper>\n  );\n};\n\nTeamCreator.propTypes = {\n  onDelete: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  values: PropTypes.shape({}.isRequired).isRequired,\n  groups: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  classes: PropTypes.shape({}.isRequired).isRequired,\n  selectedGroupId: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(TeamCreator);\n","export default array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Card,\n  CardContent,\n  Divider,\n  Grid,\n  List,\n  ListItem,\n  ListItemText,\n  Typography,\n  withStyles\n} from '@material-ui/core';\nimport shuffle from '../../utils/shuffle';\nimport { chunkByCount, chunkByMax } from '../../utils/chunckArray';\n\nconst styles = {\n  card: {\n    margin: '1rem',\n    backgroundColor: '#e4f9f5'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n};\n\nconst TeamSizes = ({ teamCount, members, classes, maxSize }) => {\n  const noOfTeams = chunkByCount(shuffle(members), teamCount);\n  const maxMembers = chunkByMax(shuffle(members), maxSize);\n  const teams = teamCount ? noOfTeams : maxSize ? maxMembers : null;\n\n  return (\n    <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={24}>\n      {teams.map((team, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Card key={index} className={classes.card}>\n          <CardContent>\n            <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n              Team \n              {' '}\n              {index + 1}\n            </Typography>\n            <Divider />\n            <List dense={false}>\n              {team.map(member => (\n                <ListItem key={member.id}>\n                  <ListItemText primary={member.name} />\n                </ListItem>\n              ))}\n            </List>\n          </CardContent>\n        </Card>\n      ))}\n    </Grid>\n  );\n};\n\nTeamSizes.propTypes = {\n  teamCount: PropTypes.number.isRequired,\n  maxSize: PropTypes.number.isRequired,\n  classes: PropTypes.shape({}.isRequired).isRequired,\n  members: PropTypes.arrayOf(PropTypes.shape({}.isRequired).isRequired).isRequired\n};\n\nexport default withStyles(styles)(TeamSizes);\n","import _ from 'lodash';\n\nexport const chunkByCount = (arr, chunkCount) => {\n  const chunks = [];\n  while (arr.length) {\n    const chunkSize = Math.ceil(arr.length / chunkCount--);\n    const chunk = arr.slice(0, chunkSize);\n    chunks.push(chunk);\n    arr = arr.slice(chunkSize);\n  }\n  return chunks;\n};\n\nexport const chunkByMax = (arr, size) => {\n  const count = Math.ceil(arr.length / size);\n  if (!count) return [arr]; // when size is too big\n  size = Math.ceil(arr.length / count);\n  const i = arr.length - (size - 1) * (arr.length % size && size - (arr.length % size));\n  return _.chunk(arr.slice(0, i), size).concat(_.chunk(arr.slice(i), size - 1));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Divider,\n  FormControl,\n  FormHelperText,\n  MenuItem,\n  Select,\n  InputLabel,\n  Typography,\n  Paper,\n  withStyles\n} from '@material-ui/core';\n\nimport TeamSizes from './TeamSizes';\n\nconst styles = theme => ({\n  root: {\n    flexGrow: 1\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n    minWidth: 120\n  },\n  paper: {\n    padding: theme.spacing.unit * 2,\n    textAlign: 'center',\n    backgroundColor: '#11999e',\n    color: theme.palette.text.secondary\n  },\n  margin: {\n    margin: theme.spacing.unit\n  },\n  link: {\n    textDecoration: 'none',\n\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none',\n      color: 'black'\n    }\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper\n  }\n});\n\nconst TeamSizePicker = ({ groups, selectedGroupId, teamCount, maxSize, classes, handleChange }) => {\n  const selectedGroup = groups.filter(group => group.id === selectedGroupId);\n  const members = selectedGroup.length !== 0 && selectedGroup[0].members;\n  const countMembers = selectedGroup.length !== 0 && selectedGroup[0].members.length;\n  const teamSizing = countMembers > 0 && Array.from(Array(countMembers), (_, index) => index + 1);\n  const maxSizeSizing = countMembers > 0 && Array.from(Array(countMembers), (_, index) => index + 1);\n\n  return (\n    countMembers > 2 && (\n      <Paper className={classes.paper}>\n        <Typography component=\"h5\" variant=\"h5\" gutterBottom>\n          Team Generator\n        </Typography>\n        <Divider />\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"sizeSelector\">No. of teams</InputLabel>\n          <Select value={teamCount} onChange={handleChange} inputProps={{ name: 'teamCount', id: 'sizeSelector' }}>\n            {countMembers > 0 &&\n              teamSizing.map(\n                teamCount =>\n                  teamCount > 1 &&\n                  teamCount < countMembers && (\n                    <MenuItem key={teamCount} value={teamCount}>\n                      {teamCount}\n                      {countMembers % teamCount === 0 && ` *`}\n                    </MenuItem>\n                  )\n              )}\n          </Select>\n          <FormHelperText>* = equal teams</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"maxSizeSelector\">Max Size</InputLabel>\n          <Select value={maxSize} onChange={handleChange} inputProps={{ name: 'maxSize', id: 'maxSizeSelector' }}>\n            {countMembers > 0 &&\n              maxSizeSizing.map(\n                maxSize =>\n                  maxSize > 1 &&\n                  maxSize <= Math.ceil(countMembers / 2) && (\n                    <MenuItem key={maxSize} value={maxSize}>\n                      {maxSize}\n                      {countMembers % maxSize === 0 && ` *`}\n                    </MenuItem>\n                  )\n              )}\n          </Select>\n          <FormHelperText />\n        </FormControl>\n        {(teamCount !== 0 || maxSize !== 0) && <TeamSizes teamCount={teamCount} members={members} maxSize={maxSize} />}\n      </Paper>\n    )\n  );\n};\n\nTeamSizePicker.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  teamCount: PropTypes.number.isRequired,\n  maxSize: PropTypes.number.isRequired,\n  groups: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  classes: PropTypes.shape({}.isRequired).isRequired,\n  selectedGroupId: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(TeamSizePicker);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TeamSizePicker from './TeamSizePicker';\n\nclass TeamSizePickerContainer extends React.Component {\n  // I have to set the maxSize to -1, to avoid showing '0' near the selecter. Who solves this in a clean way get a coffee!\n  state = { teamCount: 0, maxSize: 0 };\n\n  handleChange = e => {\n    if (e.target.name === 'teamCount') {\n      this.setState({ [e.target.name]: e.target.value, maxSize: 0 });\n    } else if (e.target.name === 'maxSize') {\n      this.setState({ [e.target.name]: e.target.value, teamCount: 0 });\n    }\n  };\n\n  render() {\n    const { groups, selectedGroupId } = this.props;\n    const { teamCount, maxSize } = this.state;\n    return (\n      <TeamSizePicker\n        groups={groups}\n        selectedGroupId={selectedGroupId}\n        teamCount={teamCount}\n        maxSize={parseInt(maxSize)}\n        handleChange={this.handleChange}\n      />\n    );\n  }\n}\n\nTeamSizePickerContainer.propTypes = {\n  groups: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  selectedGroupId: PropTypes.string.isRequired\n};\n\nconst mapStateToProps = state => ({ groups: state.groups });\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(TeamSizePickerContainer);\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport TeamMembersList from '../TeamMembersList';\nimport TeamGenerator from '../TeamGenerator';\nimport { addMember, deleteMember } from '../../actions/member';\nimport { getGroups } from '../../actions/group';\n\nclass TeamCreatorContainer extends React.Component {\n  state = { groupMember: '' };\n\n  componentDidMount() {\n    const { getGroups } = this.props;\n    getGroups();\n  }\n\n  onSubmit = e => {\n    const { addMember, match } = this.props;\n    const { groupMember } = this.state;\n    const groupId = match.params.id;\n    e.preventDefault();\n    addMember(groupId, groupMember);\n    this.setState({ groupMember: '' });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onDelete = (id, memberId) => () => {\n    const { deleteMember } = this.props;\n    deleteMember(id, memberId);\n  };\n\n  render() {\n    const { groups, match } = this.props;\n    return (\n      <Grid container direction=\"row\" justify=\"center\" alignItems=\"flex-start\" spacing={16}>\n        <Grid item xs={3}>\n          <TeamMembersList\n            onSubmit={this.onSubmit}\n            onChange={this.onChange}\n            values={this.state}\n            groups={groups}\n            selectedGroupId={match.params.id}\n            onDelete={this.onDelete}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TeamGenerator selectedGroupId={match.params.id} />\n        </Grid>\n      </Grid>\n    );\n  }\n}\n\nTeamCreatorContainer.propTypes = {\n  getGroups: PropTypes.func.isRequired,\n  addMember: PropTypes.func.isRequired,\n  deleteMember: PropTypes.func.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  groups: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired\n};\n\nconst mapStateToProps = state => ({ groups: state.groups });\n\nexport default connect(\n  mapStateToProps,\n  { addMember, deleteMember, getGroups }\n)(TeamCreatorContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, Link, Typography, withStyles } from '@material-ui/core';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst styles = theme => ({\n  root: {\n    padding: '1rem',\n    flexGrow: 1\n  },\n  title: {\n    color: 'white'\n  },\n  link: {\n    textDecoration: 'none',\n\n    '&:focus, &:hover, &:visited, &:link, &:active': {\n      textDecoration: 'none',\n      color: 'black'\n    }\n  }\n});\n\nconst Title = ({ classes }) => {\n  return (\n    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={24} className={classes.root}>\n      <Grid item xs={12}>\n        <div className={classes.title}>\n          <Typography component=\"h2\" variant=\"h2\" gutterBottom>\n            <Link component={RouterLink} to=\"/\" className={classes.link}>\n              Robin's Class Team Creator\n            </Link>\n          </Typography>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nTitle.propTypes = {\n  classes: PropTypes.shape({}.isRequired).isRequired\n};\n\nexport default withStyles(styles)(Title);\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nimport GroupPickerContainer from './GroupPicker';\nimport TeamCreatorContainer from './TeamCreator';\nimport Title from './Title';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" component={Title} />\n      <Switch>\n        <Route exact path=\"/\" component={GroupPickerContainer} />\n        <Route exact path=\"/group/:id\" component={TeamCreatorContainer} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\n\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}